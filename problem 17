class Solution {
    public static void bctrc(StringBuilder s1,String digits,HashMap<Integer,String> h1,List<String> l1,int first){
        if(s1.length()==digits.length()){
            l1.add(s1.toString());
        }
        else{
            int x=(int)digits.charAt(first)-48;
        char[] finalarr=h1.get(x).toCharArray();
        for(int i=0;i<finalarr.length;i++){
            s1.append(finalarr[i]);
            bctrc(s1,digits,h1,l1,first+1);
            s1.deleteCharAt(s1.length()-1);
        }
        }

    }
    public List<String> letterCombinations(String digits) {
        List<String> l1=new ArrayList<>();
        HashMap<Integer,String> h1=new HashMap<>();
        h1.put(2,"abc");
        h1.put(3,"def");
        h1.put(4,"ghi");
        h1.put(5,"jkl");
        h1.put(6,"mno");
        h1.put(7,"pqrs");
        h1.put(8,"tuv");
        h1.put(9,"wxyz");
        if(digits.length()==0){
            return l1;
        }
        StringBuilder s1=new StringBuilder();
        bctrc(s1,digits,h1,l1,0);
        return l1;

    }
}
